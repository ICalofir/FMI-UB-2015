import java.io.*;
import java.net.*;
import java.util.*;

public class Server {
	private static class Connection implements Runnable {
		private Socket socket;
		private String username;
		private Scanner input;
		private PrintWriter output;
		private String message;
		private Communication communication;
		
		public Connection(Socket socket) {
			this.socket = socket;
		}
		
		public Socket getSocket() {
			return this.socket;
		}
		
		public void run() {
			try {
				this.input = new Scanner(this.socket.getInputStream());
				this.output = new PrintWriter(this.socket.getOutputStream());
				
				while (true) {
					if (!this.input.hasNext()) {
						return;
					}
					
					this.message = input.nextLine();
					this.communication = new Communication();
					this.communication.decodeJSON(this.message);
					
//					if (this.communication.Type == Communication.CommunicationType.ANNOUNCEMENT.name()) {
//						for (Connection con : Server.connections) {
//							PrintWriter tempOutput = new PrintWriter(con.getSocket().getOutputStream());
//							tempOutput.println(this.communication.Content);
//							tempOutput.flush();
//						}
//					}
				}
				
			} catch (Exception e) {
				System.out.println(e.getMessage());
			}
		}
	}
	
	private static ServerSocket serverSocket;
	private static Socket socket;
	private static ArrayList<Connection> connections = new ArrayList<Connection>();
	public static void main(String[] args) throws Exception {
		try {
			serverSocket = new ServerSocket(8000);
			System.out.println("Running...");
			
			while(true) {
				Socket socket = serverSocket.accept();
				Connection connection = new Connection(socket);
				connections.add(connection);
				
				System.out.println("Client connected from: " + socket.getLocalAddress().getHostName());
				
				Thread thread = new Thread(connection);
				thread.start();
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
}
