import java.io.*;
import java.util.*;

public class p1 {
	private static int n, p;
	private static class pair implements Comparable<pair> {
		int l, c;
		
		pair() {
			l = 0;
			c = 0;
		}
		
		pair(int l, int c) {
			this.l = l;
			this.c = c;
		}
		
		public int compareTo(pair obj) {
			return obj.l - l;
		}
	}
	
	private static ArrayList<pair> v = new ArrayList<pair>();
	
	private static void read() throws Exception {
		File fin = new File("date.in");
		Scanner sc = null;
		
		try {
			sc = new Scanner(fin);
			
			n = sc.nextInt();
			p = sc.nextInt();
			for (int i = 1; i <= n; ++i) {
				int l = sc.nextInt();
				int c = sc.nextInt();
				
				v.add(new pair(l, c));
			}
		} catch (Exception ex) {
			throw ex;
		} finally {
			if (sc != null) {
				sc.close();
			}
		}
	}
	
	private static void solve() throws Exception {
		System.out.println(n + " " + p);
		Collections.sort(v);
		for (pair x : v) {
			System.out.println(x.l + " " + x.c);
		}
		
		Writer wr = new FileWriter("date.out");
		
		if (n <= 0) {
			wr.write("Numarul cuburilor trebuie sa fie strict pozitiv!");
		} else {
			int s = v.get(0).l;
			int now_c = v.get(0).c;
			
			for (int i = 1; i < v.size(); ++i) {
				if (v[i])
			}
		}
		
		wr.close();
	}
	
	public static void main(String[] args) throws Exception {
		read();
		solve();
	}
}
