import java.io.*;
import java.util.*;

public class p2 {
	static private int nr, n, m;
	static private int x, y;
	
	private static void read() throws Exception {
		File fin = new File("date.in");
		Scanner sc = null;
		
		try {
			sc = new Scanner(fin);
			n = sc.nextInt();
			x = sc.nextInt();
			y = sc.nextInt();
			
		} catch (Exception ex) {
			throw ex;
		} finally {
			if (sc != null) {
				sc.close();
			}
		}
	}
	
	static private int[][] v;
	
	static private void dei(int xu, int xd, int yl, int yr, int gx, int gy) {
		int mx = (xu + xd) / 2;
		int my = (yl + yr) / 2;
		++m;
		
		if (gx <= mx && gy <= my) {
			v[mx][my + 1] = m;
			v[mx + 1][my] = m;
			v[mx + 1][my + 1] = m;
			dei(xu, mx, yl, my, gx, gy);
			dei(xu, mx, my + 1, yr, mx, my + 1);
			dei(mx + 1, xd, yl, my, mx + 1, my);
			dei(mx + 1, xd, my + 1, yr, mx + 1, my + 1);
		}
		
		if (gx <= mx && gy >= my + 1) {
			v[mx][my] = m;
			v[mx + 1][my] = m;
			v[mx + 1][my + 1] = m;
			dei(xu, mx, yl, my, mx, my);
			dei(xu, mx, my + 1, yr, gx, gy);
			dei(mx + 1, xd, yl, my, mx + 1, my);
			dei(mx + 1, xd, my + 1, yr, mx + 1, my + 1);
		}
		
		if (gx >= mx + 1 && gy <= my) {
			v[mx][my] = m;
			v[mx][my + 1] = m;
			v[mx + 1][my + 1] = m;
		}
	}
	
	private static void solve() throws Exception {
		Writer wr = new FileWriter("date.out", true);
	
		nr = 1;
		for (int i = 1; i <= n; ++i) {
			nr = nr * 2;
		}
		v = new int[nr + 1][nr + 1];
		
		m = 0;
		dei(1, nr, 1, nr, x, y);
		
		wr.close();
	}
	
	public static void main(String[] args) throws Exception {
		read();
		solve();
	}
}